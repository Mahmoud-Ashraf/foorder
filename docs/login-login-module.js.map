{"version":3,"sources":["./src/app/login/components/sign-in/sign-in.component.html","./src/app/login/components/sign-in/sign-in.component.ts","./src/app/login/components/register/register.component.html","./src/app/login/components/register/register.component.ts","./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["<div class=\"right-form\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"logo\">\n        <h1>Foorder</h1>\n      </div>\n      <div class=\"welcome\">\n        <span>Welcome back !</span>\n      </div>\n      <div class=\"join\">\n        <span>Login</span>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <form #signInForm=\"ngForm\" class=\"row row-cols-1\" (ngSubmit)=\"login(signInForm)\">\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <label class=\"custom-input-label\" for=\"email\">E-Mail</label>\n            <div class=\"custom-form-input-group\">\n              <div class=\"custom-form-addon\">\n                <i class=\"fas fa-envelope\"></i>\n              </div>\n              <input type=\"email\" name=\"email\" class=\"custom-form-input\" ngModel required autocomplete=\"email\">\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <label class=\"custom-input-label\" for=\"password\">Passowrd</label>\n            <div class=\"custom-form-input-group\">\n              <div class=\"custom-form-addon\">\n                <i class=\"fas fa-lock\"></i>\n              </div>\n              <input type=\"password\" name=\"password\" class=\"custom-form-input\" ngModel required\n                autocomplete=\"current-password\">\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n        </div>\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Sign in</button>\n          </div>\n        </div>\n        <div class=\"col\">\n          <p class=\"text-right\"><span class=\"text-muted\">Dont have account yet ? </span><a\n              class=\"text-dark text-decoration-none\" href=\"#\" routerLink=\"/auth/register\">Register here â†’</a>\n          </p>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import { NgForm } from '@angular/forms';\nimport { AuthService } from './../../../shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoaderService } from 'src/app/shared/services/loader.service';\nimport { FlashMessagesService } from 'flash-messages-angular';\nimport { ResturantsService } from 'src/app/shared/services/resturants.service';\nimport { User } from 'src/app/models/User';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  // email: string;\n  // password: string;\n  errorMessage: string;\n  disableSignIn = false;\n  loginUser: User;\n  constructor(\n    private router: Router,\n    // private loader: LoaderService,\n    // private flashMessage: FlashMessagesService,\n    // private resturantsService: ResturantsService\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    // this.resturantsService.getResturants();\n    if (this.authService.getIsAuth()) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  login(loginForm: NgForm): void {\n    this.authService.login(loginForm.value);\n  }\n\n}\n","<div class=\"right-form\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"logo\">\n        <h1>Food Order</h1>\n      </div>\n      <div class=\"welcome\">\n        <span>Welcome !</span>\n      </div>\n      <div class=\"join\">\n        <span>Join The Community</span>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <form #signUpForm=\"ngForm\" class=\"row row-cols-1\" (ngSubmit)=\"register(signUpForm)\">\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <label class=\"custom-input-label\" for=\"name\">Name</label>\n            <div class=\"custom-form-input-group\">\n              <span class=\"custom-form-addon\"><i class=\"fas fa-user\"></i></span>\n              <input type=\"text\" name=\"name\" class=\"custom-form-input\" ngModel required autocomplete=\"given-name\">\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"col\">\n                <div class=\"custom-form-group\">\n                  <label class=\"custom-input-label\" for=\"lastName\">last Name</label>\n                  <div class=\"custom-form-input-group\">\n                    <div class=\"custom-form-addon\">\n                      <i class=\"fas fa-user-alt\"></i>\n                    </div>\n                    <input type=\"text\" name=\"lastName\" class=\"custom-form-input\" [(ngModel)]=\"user.lastName\" required\n                      autocomplete=\"family-name\">\n                  </div>\n                </div>\n              </div> -->\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <label class=\"custom-input-label\" for=\"email\">E-Mail</label>\n            <div class=\"custom-form-input-group\">\n              <div class=\"custom-form-addon\">\n                <i class=\"fas fa-envelope\"></i>\n              </div>\n              <input type=\"email\" name=\"email\" class=\"custom-form-input\" ngModel required autocomplete=\"email\" email>\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"col\">\n                <div class=\"custom-form-group\">\n                  <label class=\"custom-input-label\" for=\"companyNeckname\">Company Nechname</label>\n                  <div class=\"custom-form-input-group\">\n                    <div class=\"custom-form-addon\">\n                      <i class=\"fas fa-house-user\"></i>\n                    </div>\n                    <input type=\"text\" name=\"companyNeckname\" class=\"custom-form-input\"\n                      [(ngModel)]=\"user.companyNeckname\" required>\n                  </div>\n                </div>\n              </div> -->\n        <!-- <div class=\"col\">\n                <div class=\"custom-form-group\">\n                  <label class=\"custom-input-label\" for=\"phone\">phone</label>\n                  <div class=\"custom-form-input-group\">\n                    <div class=\"custom-form-addon\">\n                      <i class=\"fas fa-mobile-alt\"></i>\n                    </div>\n                    <input type=\"text\" name=\"phone\" class=\"custom-form-input\" [(ngModel)]=\"user.phone\" required\n                      autocomplete=\"tel\">\n                  </div>\n                </div>\n              </div> -->\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <label class=\"custom-input-label\" for=\"password\">Passowrd</label>\n            <div class=\"custom-form-input-group\">\n              <div class=\"custom-form-addon\">\n                <i class=\"fas fa-lock\"></i>\n              </div>\n              <input type=\"password\" name=\"password\" class=\"custom-form-input\" ngModel required\n                autocomplete=\"new-password\" minlength=\"8\">\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n        </div>\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <button type=\"submit\" class=\"sign-in-btn w-100\" [disabled]=\"!signUpForm.valid\">Register</button>\n          </div>\n        </div>\n        <div class=\"col\">\n          <p class=\"text-right\"><span class=\"text-muted\">Already a member? </span><a\n              class=\"text-dark text-decoration-none\" href=\"#\" routerLink=\"/auth/login\">Login here â†’</a>\n          </p>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import { AuthService } from './../../../shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/User';\nimport { LoaderService } from 'src/app/shared/services/loader.service';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  user: User;\n  // password: string;\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  private userListnerSub: Subscription;\n  errorMessage: string;\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    if (this.authService.getIsAuth()) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  register(registerForm: NgForm) {\n    console.log(registerForm.value);\n    this.authService.register(registerForm.value);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthService } from '../shared/services/auth.service';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    SignInComponent\n  ],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule\n  ],\n  providers: []\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { LoginComponent } from './login.component';\n// import { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginComponent, children: [\n      { path: 'login', component: SignInComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: '**', redirectTo: 'login' }\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from './../shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  authListenerSubs: Subscription;\n  userIsAuthenticated = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // this.authListenerSubs = this.authService\n    //   .getAuthStatusListener()\n    //   .subscribe(isAuthenticated => {\n    //     if (isAuthenticated || this.authService.getIsAuth()) {\n    //       this.router.navigate(['/home']);\n    //     }\n\n    //   });\n    // console.log('authorized:', this.authService.getIsAuth());\n    // if (this.authService.getIsAuth()) {\n    //   this.router.navigate(['/home']);\n    // }\n    // console.log('Mahmoooooooooyud');\n  }\n\n}\n","<div class=\"double-form\">\n    <div class=\"row row-cols-2 gx-5\">\n        <div class=\"col\">\n            <div class=\"left-form\">\n\n            </div>\n        </div>\n        <div class=\"col\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}