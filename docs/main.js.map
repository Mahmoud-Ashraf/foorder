{"version":3,"sources":["./src/app/shared/services/resturants.service.ts","./src/app/shared/components/not-found/not-found.component.ts","./src/app/shared/components/not-found/not-found.component.html","./src/app/shared/interceptors/network.interceptor.ts","./src/app/shared/components/loader/loader.component.html","./src/app/shared/components/loader/loader.component.ts","./src/app/guards/auth.guards.ts","./src/app/shared/components/aside/aside.component.ts","./src/app/shared/components/aside/aside.component.html","./src/environments/environment.ts","./src/app/shared/components/no-data-found/no-data-found.component.ts","./src/app/shared/components/no-data-found/no-data-found.component.html","./src/app/shared/services/auth.service.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/services/menu.service.ts","./src/app/shared/services/loader.service.ts","./src/app/shared/services/helper.service.ts","./src/app/guards/admin.guards.ts","./src/app/login/interceptors/auth.interceptor.ts","./src/app/shared/services/requests.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { RequestsService } from './requests.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResturantsService {\r\n  constructor(\r\n    private requests: RequestsService\r\n  ) {\r\n  }\r\n\r\n\r\n\r\n  getResturants(page: number = 1, perPage: number = 0, filter: string = '') {\r\n    return this.requests.getApi(`resturants?page=${page}&perPage=${perPage}&filter=${filter}`);\r\n    // .then(res => {\r\n    //   if (res.status !== 200) {\r\n    //     throw new Error('Faild To Fetch Resturants');\r\n    //   }\r\n    //   return res.json();\r\n    // })\r\n    // .then(resData => console.log('get response', resData))\r\n    // .catch(err => console.log(err));\r\n  }\r\n  getResturant(id: any) {\r\n    return this.requests.getApi(`resturant/${id}`);\r\n  }\r\n\r\n  updateResturant(id: any, resturant: any) {\r\n    return this.requests.putApi(`resturant/${id}`, resturant);\r\n  }\r\n\r\n  addResturant(resturant: any) {\r\n    return this.requests.postApi('resturant', resturant);\r\n  }\r\n  deleteResturant(id: any) {\r\n    return this.requests.deleteApi(`resturant/${id}`);\r\n  }\r\n\r\n  getTodayResturant() {\r\n    return this.requests.getApi('toDayResturant');\r\n  }\r\n\r\n  resetResturantsVote() {\r\n    return this.requests.putApi('resetResturantsVote');\r\n  }\r\n  // async getResturantsAsync() {\r\n  //   const response = await this.requests.getApi('resturants').toPromise();\r\n  //   return response;\r\n  // }\r\n\r\n  // async addResturantAsync(resturant: any) {\r\n  //   const response = await this.requests.postApi('resturant', resturant).toPromise();\r\n  //   return response;\r\n  // }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoaderService } from '../services/loader.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class NetworkInterceptor implements HttpInterceptor {\n\n  constructor(\n    private loader: LoaderService\n  ) { }\n  // intercept(request: Observable<any>, next: any): Observable<any> {\n  //   this.loader.show();\n  //   return next.handle(request).pipe(\n  //     finalize(() => {\n  //       this.loader.hide();\n  //     })\n  //   )\n  // }\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.loader.show();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.loader.hide();\n      })\n    );\n  }\n}\n","<div class=\"loader\" *ngIf=\"loading$ | async\">\n  <i class=\"fas fa-spinner fa-spin fa-10x\"></i>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from '../../services/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  loading$ = this.loader.loading;\n  constructor(\n    public loader: LoaderService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { AuthService } from './../shared/services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/auth']);\r\n    }\r\n    // return this.afAuth.authState.pipe(map(auth => {\r\n    //   if (!auth) {\r\n    //     this.router.navigate(['/login']);\r\n    //     return false;\r\n    //   } else {\r\n    //     return true;\r\n    //   }\r\n    // }));\r\n    return isAuth;\r\n  }\r\n}\r\n","import { HelperService } from 'src/app/shared/services/helper.service';\r\nimport { User } from 'src/app/models/User';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, Event as NavigationEvent, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-aside',\r\n  templateUrl: './aside.component.html',\r\n  styleUrls: ['./aside.component.scss']\r\n})\r\nexport class AsideComponent implements OnInit, OnDestroy {\r\n  userIsAuthenticated = false;\r\n  private authListenerSubs: Subscription;\r\n  private userListnerSub: Subscription;\r\n  private routerEventsSub: Subscription;\r\n  loggedUser: any;\r\n  adminOpen: boolean = false;\r\n  constructor(\r\n    private router: Router,\r\n    public authService: AuthService,\r\n    private helperService: HelperService\r\n  ) { }\r\n\r\n  ngOnchange(): void {\r\n    \r\n  }\r\n  ngOnInit(): void {\r\n    this.adminOpen = this.router.url.includes('admin');\r\n    this.routerEventsSub = this.router.events.subscribe((event: NavigationEvent) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.adminOpen = event.url.includes('admin');\r\n      }\r\n    })\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.loggedUser = this.authService.getLoggedUser();\r\n    this.authListenerSubs = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n    this.userListnerSub = this.authService\r\n      .getAuthUserListner()\r\n      .subscribe((user: any) => {\r\n        this.loggedUser = user;\r\n      })\r\n  }\r\n\r\n  navigate(url: string): void {\r\n    this.router.navigate([url]);\r\n  }\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSubs?.unsubscribe();\r\n    this.userListnerSub?.unsubscribe();\r\n    this.routerEventsSub?.unsubscribe();\r\n\r\n  }\r\n  generateUserAvatar(userName: string) {\r\n    return this.helperService.generateUserAvatar(userName);\r\n  }\r\n\r\n}\r\n","<aside class=\"aside\" *ngIf=\"userIsAuthenticated\">\r\n  <div class=\"aside-container\">\r\n    <div class=\"brand\">\r\n      <h1 class=\"text-center\"><a (click)=\"navigate('/home')\">Foorder</a></h1>\r\n    </div>\r\n    <div class=\"user\">\r\n      <a class=\"user-welcome text-decoration-none text-white\" (click)=\"navigate('/home/profile')\">\r\n        <div class=\"user-welcome--avatar\">\r\n          <span class=\"user-first-name text-uppercase text-primary\">{{generateUserAvatar(loggedUser?.name)}}</span>\r\n        </div>\r\n        {{loggedUser?.name}}\r\n      </a>\r\n    </div>\r\n    <div class=\"links\">\r\n      <ul class=\"links-list\" *ngIf=\"!adminOpen\">\r\n        <li><a (click)=\"navigate('/home')\"><span><img src=\"assets/styles/images/icons/home.svg\"></span>Home</a></li>\r\n        <li><a (click)=\"navigate('/home/cart')\"><span><img src=\"assets/styles/images/icons/cart.svg\"></span>Cart</a></li>\r\n        <li><a (click)=\"navigate('/home/wallet')\"><span><img src=\"assets/styles/images/icons/wallet.svg\"></span>Wallet</a></li>\r\n        <li *ngIf=\"loggedUser?.isAdmin\"><a (click)=\"navigate('/admin')\"><span><img src=\"assets/styles/images/icons/home.svg\"></span>Admin</a></li>\r\n      </ul>\r\n      <ul class=\"links-list\" *ngIf=\"adminOpen\">\r\n        <li><a (click)=\"navigate('/admin')\"><span><img src=\"assets/styles/images/icons/home.svg\"></span>Home</a></li>\r\n        <li><a (click)=\"navigate('/admin/orders')\"><span><img src=\"assets/styles/images/icons/orders.svg\"></span>Food\r\n            Orders</a></li>\r\n        <li><a (click)=\"navigate('/admin/resturants')\"><span><img\r\n                src=\"assets/styles/images/icons/resturants.svg\"></span>My\r\n            Resturants</a></li>\r\n        <li><a (click)=\"navigate('/admin/menu')\"><span><img src=\"assets/styles/images/icons/resturants.svg\"></span>My\r\n            Menus</a></li>\r\n        <li><a (click)=\"navigate('/admin/users')\"><span><img\r\n                src=\"assets/styles/images/icons/users.svg\"></span>Users</a></li>\r\n        <li><a (click)=\"navigate('/admin/config')\"><span><img\r\n                src=\"assets/styles/images/icons/users.svg\"></span>Configurations</a></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"links\">\r\n      <ul class=\"links-list\">\r\n        <li><a (click)=\"onLogout()\"><span><img src=\"assets/styles/images/icons/logout.svg\"></span>Logout</a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</aside>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\n  apiUrl: 'https://forder-api.herokuapp.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-data-found',\n  templateUrl: './no-data-found.component.html',\n  styleUrls: ['./no-data-found.component.scss']\n})\nexport class NoDataFoundComponent implements OnInit {\n  @Input() msg: string;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center text-main-danger fa-3x\">\n    {{msg}}\n</div>","import { Router } from '@angular/router';\r\nimport { RequestsService } from './requests.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Credintials } from 'src/app/login/models/credintials';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private token: string | null;\r\n  private authStatusListener = new Subject<boolean>();\r\n  private isAuthenticated = false;\r\n  private loggedUser: any = undefined;\r\n  private loggedUserListener = new Subject();\r\n  private isAdmin = false;\r\n  tokenTimer: any;\r\n  constructor(\r\n    private requests: RequestsService,\r\n    private router: Router,\r\n  ) { }\r\n  register(user: Credintials) {\r\n    return this.requests.putApi('auth/signup', user).subscribe((response: any) => {\r\n      const token = response.token;\r\n      this.token = token;\r\n      const loggedUserId = response.user._id;\r\n      if (token) {\r\n        const expiresInDuration = response.expiresIn;\r\n        this.setAuthTimer(expiresInDuration);\r\n        this.isAuthenticated = true;\r\n        this.loggedUser = response.user;\r\n        this.authStatusListener.next(true);\r\n        this.loggedUserListener.next(response.user);\r\n        // this.isAdmin = response.user.isAdmin;\r\n        const expirationDate = new Date(new Date().getTime() + expiresInDuration * 1000);\r\n        this.saveAuthData(token, expirationDate, loggedUserId);\r\n        this.router.navigate(['/home']);\r\n      }\r\n      // localStorage.setItem('token', response.token);\r\n    }\r\n    )\r\n    // .pipe(tap((resData: any) => {\r\n    //   const expirationDate = new Date(new Date().getTime() + + resData.expiresIn * 1000);\r\n    //   const user = new User(resData.user.name, resData.user.email, resData.user._id, resData.token, expirationDate);\r\n    //   this.user.next(user);\r\n    // }));\r\n  }\r\n\r\n  login(user: Credintials) {\r\n    this.requests.postApi('auth/login', user).subscribe((response: any) => {\r\n      const token = response.token;\r\n      this.token = token;\r\n      const loggedUserId = response.user._id;\r\n      if (token) {\r\n        const expiresInDuration = response.expiresIn;\r\n        this.setAuthTimer(expiresInDuration);\r\n        this.isAuthenticated = true;\r\n        this.loggedUser = response.user;\r\n        this.authStatusListener.next(true);\r\n        this.loggedUserListener.next(response.user);\r\n        this.isAdmin = response.user.isAdmin;\r\n        const expirationDate = new Date(new Date().getTime() + expiresInDuration * 1000);\r\n        this.saveAuthData(token, expirationDate, loggedUserId);\r\n        this.router.navigate(['/home']);\r\n      }\r\n      // localStorage.setItem('token', response.token);\r\n    }\r\n    )\r\n    // .pipe(tap((resData: any) => {\r\n    //   // this.userObs.subscribe(myUser => {\r\n    //   // })\r\n    //   const expirationDate = new Date(new Date().getTime() + + resData.expiresIn * 1000);\r\n    //   const user = new User(resData.user.name, resData.user.email, resData.user._id, resData.token, expirationDate);\r\n    //   this.user.next(user);\r\n    //   // this.isAuthenticated = true;\r\n    //   // this.userObs.subscribe(myUser => {\r\n    //   // })\r\n    // }));\r\n  }\r\n\r\n  getUsers({page = 1, perPage = 0, filter = ''} = {}) {\r\n    return this.requests.getApi(`auth/users?filter=${filter}&page=${page}&perPage=${perPage}`);\r\n  }\r\n  updateUser(userId: any, user: any) {\r\n    return this.requests.putApi(`auth/user/${userId}`, user);\r\n  }\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n  getLoggedUser() {\r\n    return this.loggedUser;\r\n  }\r\n\r\n  getIsAdmin() {\r\n    return this.isAdmin;\r\n  }\r\n\r\n  getAuthUserListner() {\r\n    return this.loggedUserListener.asObservable();\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    const now = new Date();\r\n    if (!authInformation) {\r\n      return\r\n    }\r\n    const expiresIn = (authInformation.expirationDate.getTime() - now.getTime());\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.setAuthUser(authInformation.loggedUserId);\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n\r\n  logout(): void {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.loggedUser = undefined;\r\n    this.authStatusListener.next(false);\r\n    this.loggedUserListener.next(null);\r\n    clearTimeout(this.tokenTimer);\r\n    // this.clearAuthData();\r\n    localStorage.clear();\r\n    this.router.navigate(['auth/login']);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, loggedUserId?: string) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expirationDate.toISOString());\r\n    if (loggedUserId) {\r\n      localStorage.setItem('loggedUserId', loggedUserId);\r\n    }\r\n  }\r\n\r\n  // private clearAuthData() {\r\n  //   localStorage.removeItem('token');\r\n  //   localStorage.removeItem('expiration');\r\n  //   localStorage.removeItem('loggedUserId');\r\n  // }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate = localStorage.getItem('expiration');\r\n    const loggedUserId = localStorage.getItem('loggedUserId');\r\n    if (!token || !expirationDate || !loggedUserId) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      loggedUserId: loggedUserId\r\n    }\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private setAuthUser(userId: string) {\r\n    this.requests.getApi(`auth/user/${userId}`).subscribe((user: any) => {\r\n      this.loggedUser = user;\r\n      this.loggedUserListener.next(user);\r\n      this.isAdmin = user.isAdmin;\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { AsideComponent } from './components/aside/aside.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoaderComponent } from './components/loader/loader.component';\r\nimport { LoaderService } from './services/loader.service';\r\nimport { RequestsService } from './services/requests.service';\r\nimport { ResturantsService } from './services/resturants.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { MenuService } from './services/menu.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NetworkInterceptor } from './interceptors/network.interceptor';\r\nimport { AuthInterceptor } from '../login/interceptors/auth.interceptor';\r\nimport { NoDataFoundComponent } from './components/no-data-found/no-data-found.component';\r\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AsideComponent,\r\n    FooterComponent,\r\n    NotFoundComponent,\r\n    LoaderComponent,\r\n    NoDataFoundComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    QuicklinkModule,\r\n    FormsModule,\r\n    NgbModalModule,\r\n    \r\n  ],\r\n  exports: [\r\n    QuicklinkModule,\r\n    AsideComponent,\r\n    FooterComponent,\r\n    NotFoundComponent,\r\n    FormsModule,\r\n    LoaderComponent,\r\n    NoDataFoundComponent,\r\n  ],\r\n  providers: [LoaderService, RequestsService, ResturantsService, MenuService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: NetworkInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    }\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","import { RequestsService } from './shared/services/requests.service';\nimport { AuthService } from './shared/services/auth.service';\nimport { AfterContentInit, Component, OnInit } from '@angular/core';\nimport { User } from './models/User';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterContentInit {\n  title = 'food-order';\n  showAdminBtn = false;\n  constructor(\n    private authService: AuthService,\n    private requestsService: RequestsService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.authService.autoAuthUser();\n  }\n\n  ngAfterContentInit(): void {\n  }\n\n}\n","<app-loader></app-loader>\r\n<!-- <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3\">\r\n      <app-header></app-header>\r\n    </div>\r\n    <div class=\"col-9\">\r\n      <main> -->\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<!-- </main>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<!-- <div class=\"basic-layout\">\r\n  <div class=\"container\">\r\n  </div>\r\n</div> -->\r\n<!-- <app-footer></app-footer> -->","import { MenuService } from './shared/services/menu.service';\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NetworkInterceptor } from './shared/interceptors/network.interceptor';\r\nimport { LoaderService } from './shared/services/loader.service';\r\nimport { RequestsService } from './shared/services/requests.service';\r\nimport { ResturantsService } from './shared/services/resturants.service';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    QuicklinkModule,\r\n    SharedModule,\r\n    HttpClientModule\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: []\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { RequestsService } from './requests.service';\nimport { MenuItem } from 'src/app/models/menu-item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  constructor(\n    private requests: RequestsService\n  ) {}\n\n  getMenu(resturantId: string = '', page: number = 1, perPage: number = 0, filter: string = '') {\n    return this.requests.getApi(`menu?resturantId=${resturantId}&page=${page}&perPage=${perPage}&filter=${filter}`);\n  }\n\n  getMenuItem(id: any): Observable<MenuItem> {\n    return this.requests.getApi(`menu/${id}`);\n  }\n\n  updateMenuItem(id: any, menuItem: any) {\n    return this.requests.putApi(`menu/${id}`, menuItem);\n  }\n\n  addMenuItem(menuItem: any) {\n    return this.requests.postApi('menu', menuItem);\n  }\n  deleteMenuItem(id: any) {\n    return this.requests.deleteApi(`menu/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n\r\n  loadersCount = 0;\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n  public readonly loading = this.loadingSubject.asObservable();\r\n  constructor() { }\r\n\r\n  show(): void {\r\n    this.loadingSubject.next(true);\r\n  }\r\n\r\n  hide(): void {\r\n    this.loadingSubject.next(false);\r\n  }\r\n}\r\n","import { RequestsService } from './requests.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelperService {\r\n\r\n  constructor(private location: Location, private requests: RequestsService,\r\n    ) { }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  calculateValueFromPerc(perc: number, total: number) {\r\n    return perc*total/100;\r\n  }\r\n\r\n  generateUserAvatar(userName: string) {\r\n    let avatar = '';\r\n    if(userName) {\r\n      let splitedName = userName.split(' ');\r\n      splitedName.forEach(namePhrase => {\r\n          avatar += namePhrase[0];\r\n      });\r\n    }\r\n    return avatar;\r\n  }\r\n\r\n  getConfig() {\r\n    return this.requests.getApi(`config`);\r\n  }\r\n  \r\n  updateConfig(config: any) {\r\n    return this.requests.putApi(`config`, config);\r\n  }\r\n}\r\n","import { AuthService } from './../shared/services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAdmin = this.authService.getIsAdmin();\r\n    if (!isAdmin) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n    return isAdmin;\r\n  }\r\n}\r\n","import { AuthService } from './../../shared/services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = request.clone({\r\n      headers: request.headers.set('Authorization', 'Bearer ' + authToken)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestsService {\n\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  // getApi(apiUrl: string) {\n  //   return fetch(`${this.baseUrl}/${apiUrl}`);\n  // }\n  getApi(apiUrl: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${apiUrl}`);\n  }\n\n  postApi(apiUrl: string, data?: any) {\n    return this.http.post(`${this.baseUrl}/${apiUrl}`, data);\n    // return fetch(`${this.baseUrl}/${apiUrl}`, {\n    //   method: 'POST',\n    //   body: JSON.stringify(data),\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   }\n    // });\n  }\n  putApi(apiUrl: string, data?: any) {\n    return this.http.put(`${this.baseUrl}/${apiUrl}`, data);\n  }\n\n  deleteApi(apiUrl: any) {\n    return this.http.delete(`${this.baseUrl}/${apiUrl}`);\n  }\n\n}\n","import { AdminGuard } from './guards/admin.guards';\n// import { ProfileComponent } from './home/components/profile/profile.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuicklinkStrategy } from 'ngx-quicklink';\nimport { AuthGuard } from './guards/auth.guards';\n// import { CartComponent } from './home/components/cart/cart.component';\nimport { NotFoundComponent } from './shared/components/not-found/not-found.component';\n// import { WalletComponent } from './home/components/wallet/wallet.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'auth', pathMatch: 'full' },\n  { path: 'auth', loadChildren: () => import('./login/login.module').then(m => m.LoginModule) },\n  { path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule), canActivate: [AuthGuard, AdminGuard] },\n  { path: 'home', loadChildren: () => import('./home/client.module').then(m => m.ClientModule), canActivate: [AuthGuard] },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes,\n      { preloadingStrategy: QuicklinkStrategy })\n  ],\n  exports: [RouterModule],\n  providers: [AuthGuard, AdminGuard]\n})\n\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}