{"version":3,"sources":["./src/app/login/components/sign-in/sign-in.component.html","./src/app/login/components/sign-in/sign-in.component.ts","./src/app/login/components/register/register.component.html","./src/app/login/components/register/register.component.ts","./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["<div class=\"right-form\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"logo\">\n        <h1>Foorder</h1>\n      </div>\n      <div class=\"welcome\">\n        <span>Welcome back !</span>\n      </div>\n      <div class=\"join\">\n        <span>Login</span>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <form #signInForm=\"ngForm\" class=\"row row-cols-1\" (ngSubmit)=\"login(signInForm)\">\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <label class=\"custom-input-label\" for=\"email\">E-Mail</label>\n            <div class=\"custom-form-input-group\">\n              <div class=\"custom-form-addon\">\n                <i class=\"fas fa-envelope\"></i>\n              </div>\n              <input type=\"email\" name=\"email\" class=\"custom-form-input\" ngModel required autocomplete=\"email\">\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <label class=\"custom-input-label\" for=\"password\">Passowrd</label>\n            <div class=\"custom-form-input-group\">\n              <div class=\"custom-form-addon\">\n                <i class=\"fas fa-lock\"></i>\n              </div>\n              <input type=\"password\" name=\"password\" class=\"custom-form-input\" ngModel required\n                autocomplete=\"current-password\">\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\n        </div>\n        <div class=\"col\">\n          <div class=\"custom-form-group\">\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Sign in</button>\n          </div>\n        </div>\n        <div class=\"col\">\n          <p class=\"text-right\"><span class=\"text-muted\">Dont have account yet ? </span><a\n              class=\"text-dark text-decoration-none\" href=\"#\" routerLink=\"/auth/register\">Register here â†’</a>\n          </p>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>","import { NgForm } from '@angular/forms';\r\nimport { AuthService } from './../../../shared/services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/User';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  // email: string;\r\n  // password: string;\r\n  errorMessage: string;\r\n  disableSignIn = false;\r\n  loginUser: User;\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.resturantsService.getResturants();\r\n    if (this.authService.getIsAuth()) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n\r\n  login(loginForm: NgForm): void {\r\n    this.authService.login(loginForm.value);\r\n  }\r\n\r\n}\r\n","<div class=\"right-form\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"logo\">\r\n        <h1>Foorder</h1>\r\n      </div>\r\n      <div class=\"welcome\">\r\n        <span>Welcome !</span>\r\n      </div>\r\n      <div class=\"join\">\r\n        <span>Join The Community</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <form #signUpForm=\"ngForm\" class=\"row row-cols-1\" (ngSubmit)=\"register(signUpForm)\">\r\n        <div class=\"col\">\r\n          <div class=\"custom-form-group\">\r\n            <label class=\"custom-input-label\" for=\"name\">Name</label>\r\n            <div class=\"custom-form-input-group\">\r\n              <span class=\"custom-form-addon\"><i class=\"fas fa-user\"></i></span>\r\n              <input type=\"text\" name=\"name\" class=\"custom-form-input\" ngModel required autocomplete=\"given-name\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"col\">\r\n                <div class=\"custom-form-group\">\r\n                  <label class=\"custom-input-label\" for=\"lastName\">last Name</label>\r\n                  <div class=\"custom-form-input-group\">\r\n                    <div class=\"custom-form-addon\">\r\n                      <i class=\"fas fa-user-alt\"></i>\r\n                    </div>\r\n                    <input type=\"text\" name=\"lastName\" class=\"custom-form-input\" [(ngModel)]=\"user.lastName\" required\r\n                      autocomplete=\"family-name\">\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n        <div class=\"col\">\r\n          <div class=\"custom-form-group\">\r\n            <label class=\"custom-input-label\" for=\"email\">E-Mail</label>\r\n            <div class=\"custom-form-input-group\">\r\n              <div class=\"custom-form-addon\">\r\n                <i class=\"fas fa-envelope\"></i>\r\n              </div>\r\n              <input type=\"email\" name=\"email\" class=\"custom-form-input\" ngModel required autocomplete=\"email\" email>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"col\">\r\n                <div class=\"custom-form-group\">\r\n                  <label class=\"custom-input-label\" for=\"companyNeckname\">Company Nechname</label>\r\n                  <div class=\"custom-form-input-group\">\r\n                    <div class=\"custom-form-addon\">\r\n                      <i class=\"fas fa-house-user\"></i>\r\n                    </div>\r\n                    <input type=\"text\" name=\"companyNeckname\" class=\"custom-form-input\"\r\n                      [(ngModel)]=\"user.companyNeckname\" required>\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n        <!-- <div class=\"col\">\r\n                <div class=\"custom-form-group\">\r\n                  <label class=\"custom-input-label\" for=\"phone\">phone</label>\r\n                  <div class=\"custom-form-input-group\">\r\n                    <div class=\"custom-form-addon\">\r\n                      <i class=\"fas fa-mobile-alt\"></i>\r\n                    </div>\r\n                    <input type=\"text\" name=\"phone\" class=\"custom-form-input\" [(ngModel)]=\"user.phone\" required\r\n                      autocomplete=\"tel\">\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n        <div class=\"col\">\r\n          <div class=\"custom-form-group\">\r\n            <label class=\"custom-input-label\" for=\"password\">Passowrd</label>\r\n            <div class=\"custom-form-input-group\">\r\n              <div class=\"custom-form-addon\">\r\n                <i class=\"fas fa-lock\"></i>\r\n              </div>\r\n              <input type=\"password\" name=\"password\" class=\"custom-form-input\" ngModel required\r\n                autocomplete=\"new-password\" minlength=\"8\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"alert alert-danger\" *ngIf=\"errorMessage\">{{errorMessage}}</div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"custom-form-group\">\r\n            <button type=\"submit\" class=\"btn btn-primary w-100\" [disabled]=\"!signUpForm.valid\">Register</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <p class=\"text-right\"><span class=\"text-muted\">Already a member? </span><a\r\n              class=\"text-dark text-decoration-none\" href=\"#\" routerLink=\"/auth/login\">Login here â†’</a>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { AuthService } from './../../../shared/services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/User';\r\nimport { LoaderService } from 'src/app/shared/services/loader.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  user: User;\r\n  // password: string;\r\n  userIsAuthenticated = false;\r\n  private authListenerSubs: Subscription;\r\n  private userListnerSub: Subscription;\r\n  errorMessage: string;\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.authService.getIsAuth()) {\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n\r\n  register(registerForm: NgForm) {\r\n    this.authService.register(registerForm.value);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthService } from '../shared/services/auth.service';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    SignInComponent\n  ],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule\n  ],\n  providers: []\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { LoginComponent } from './login.component';\n// import { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginComponent, children: [\n      { path: 'login', component: SignInComponent },\n      { path: 'register', component: RegisterComponent },\n      { path: '**', redirectTo: 'login' }\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from './../shared/services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  authListenerSubs: Subscription;\r\n  userIsAuthenticated = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"double-form\">\r\n    <div class=\"row gx-md-5\">\r\n        <div class=\"col-md-6 d-none d-md-block\">\r\n            <div class=\"left-form\">\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}